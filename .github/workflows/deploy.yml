name: CI

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-prod-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-prod-

      # Composer Install
      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --no-progress --ignore-platform-reqs

      # Node Install
      - name: Node install Dependencies
        run: npm install

      # Build Assets
      - name: Build assets
        run: |
          rm -rf node_modules && npm install --production

      # Update Version
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Update Version in WordPress files
        run: |
          sed -i -E 's/([[:blank:]]*\*[[:blank:]]*Version:[[:blank:]]*).*/\1${{ env.RELEASE_VERSION }}/' ${{ github.event.repository.name }}.php
          sed -i -E 's/([[:blank:]]*\$version[[:blank:]]*=[[:blank:]]*")(.*)(".*)/\1${{ env.RELEASE_VERSION }}\3/' ${{ github.event.repository.name }}.php
          sed -i -E 's/([[:blank:]]*Stable tag:[[:blank:]]*)(.*)/\1${{ env.RELEASE_VERSION }}/' README.txt

      - name: Update resources
        uses: test-room-7/action-update-file@v1
        with:
          file-path: |
            ${{ github.event.repository.name }}.php
            README.txt
          commit-msg: Update Version in WordPress specific files
          github-token: ${{ secrets.GITHUB_TOKEN }}
          

      - name: Update Tag
        run: |
          git push --delete origin ${{ env.RELEASE_VERSION }}
          git push origin ${{ env.RELEASE_VERSION }}

      # Delete Development Files
      - shell: bash
        run: |
          find . -name "composer.json" -type f -delete && find . -name "composer.lock" -type f -delete
          find . -name "package.json" -type f -delete && find . -name "package-lock.json" -type f -delete
          find . -name "constants.php" && find . -name "README.md"
          rm -rf .git && find . -name ".gitignore" -type f -delete
          rm -rf .github

      # Zip everything
      - shell: bash
        run: |
          cd ..
          sudo apt-get install zip
          zip -r ${{ github.event.repository.name }}.zip ./*
          mkdir ${{ github.workspace }}/dist
          mv ${{ github.event.repository.name }}.zip ${{ github.workspace }}/dist

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ github.workspace }}/dist/${{ github.event.repository.name }}.zip
